

### Tools ###
# tup is always called within the version variant directory, 
# so there needs to be an extra up
TOOL_DIR = $(TUP_CWD)/../../tools
IMGBANK = $(TOOL_DIR)/imgbank
GFX = $(TOOL_DIR)/n64gfx


ifndef VERSION
error "VERSION wasn't defined in tup.config"
endif

### Target Settings ###
TARGET = ssb64.@(VERSION)
ROM    = $(TARGET).z64
ELF    = $(TARGET).elf
BUILD_DIR = &build-$(TARGET)

### Compiler Settings ###
CROSS = mips64-elf-
AS = $(CROSS)as
LD = $(CROSS)ld
OBJCPY = $(CROSS)objcopy

CPP = $(CROSS)cpp

&incdir = include/
AS_FLAGS = -march=vr4300 -mabi=32
# -I $(BUILD_DIR) $(VERSION_ASFLAGS) $(GRUCODE_ASFLAGS)
LD_FLAGS = -Map $(TARGET).map --no-check-sections

### Rule Macros ###
!as = |> $(AS) $(AS_FLAGS) -I&(incdir) -o %o %f |> %B.o
!cpy_rom = |> $(OBJCPY) --pad-to=0x1000000 --gap-fill=0xFF -O binary %f %o |>

!tempbin2o = |> $(LD) -r -b binary %f -o %B.o |> %B.o
!tempaudio2o = |> $(LD) -r -b binary %f -o %b.o |> %b.o
!tempres2o = |> $(LD) -r -b binary %f -o %f.o |> %f.o

## Image Conversions
# assume img.(format)(bitdepth).png
!gfx_rgba32 = |> $(GFX) encode -i %f -f rgba -d 32 -o %o |> %B 
!gfx_rgba16 = |> $(GFX) encode -i %f -f rgba -d 16 -o %o |> %B 

!gfx_ci8 = |> $(GFX) encode -i %f -f ci -d 8 -o %o -p %B.pal.bin |> %B
!gfx_ci4 = |> $(GFX) encode -i %f -f ci -d 4 -o %o -p %B.pal.bin |> %B

!gfx_ia16 = |> $(GFX) encode -i %f -f ia -d 16 -o %o |> %B
!gfx_ia8 = |> $(GFX) encode -i %f -f ia -d 8 -o %o |> %B
!gfx_ia4 = |> $(GFX) encode -i %f -f ia -d 4 -o %o |> %B

!gfx_i8 = |> $(GFX) encode -i %f -f i -d 8 -o %o |> %B
!gfx_i4 = |> $(GFX) encode -i %f -f i -d 4 -o %o |> %B
